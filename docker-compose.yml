
services:
  redis:
    image: redis:7
    ports:
      - "6379:6379"

  novelty-service:
    build:
      context: .
      dockerfile: novelty_service/Dockerfile
    image: dguilliams3/sentiment-escalation-engine-novelty
    container_name: novelty-service
    ports:
      - "5050:5050"
    env_file:
      - .env
    environment:
      REDIS_HOST: redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/health"]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      - redis

  sentiment-service:
    build:
      context: .
      dockerfile: sentiment_service/Dockerfile
    image: dguilliams3/sentiment-service
    container_name: sentiment-service
    ports:
      - "5001:5001"
    env_file:
      - .env
    environment:
      REDIS_HOST: redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      - redis

  explainability-service:
    build:
      context: .
      dockerfile: explainability_service/Dockerfile
    image: dguilliams3/explainability-service
    container_name: explainability-service
    ports:
      - "5002:5002"
    env_file:
      - .env
    environment:
      REDIS_HOST: redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      - redis

  classification:
    build: .
    image: dguilliams3/sentiment-escalation-engine-classification
    command: python run_classification.py
    env_file:
      - .env
    environment:
      REDIS_HOST: redis
    depends_on:
      - redis

  ingest_api:
    build: .
    image: dguilliams3/sentiment-escalation-engine-ingest-api
    command: python submit_review.py
    ports:
      - "5000:5000"
    environment:
      REDIS_HOST: redis
    depends_on:
      - redis

  escalation:
    build: .
    image: dguilliams3/sentiment-escalation-engine-escalation
    command: python run_smart_escalation.py
    env_file:
      - .env
    environment:
      REDIS_HOST: redis
    depends_on:
      redis:
        condition: service_started
      novelty-service:
        condition: service_healthy
